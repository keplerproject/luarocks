local install = require("luarocks.install")
local test_environment = require("new_test/test_environment")
local lfs = require("lfs")

describe("LuaRocks #install_whitebox", function()
	describe("basic test #install_whitebox_new", function()
		it("trivial_test2", function()
			assert.are.same(1,1)
		end)
	end)

	describe( "basic test #install_whitebox_old", function()
		it("trivial_test2", function()
			assert.are.same(1,1)
		end)
	end)
end)

--TODO
describe("Luarocks #install_blackbox", function()
	local test_utils = test_environment.main()
	it("luarocks install with no arguments", function()
		test_environment.reset_environment(test_utils.testing_paths, test_utils.md5sums)
		local output = test_utils.luarocks(" install", test_utils.testing_env_variables)

	end)
	it("luarocks install with invalid argument", function()
		test_environment.reset_environment(test_utils.testing_paths, test_utils.md5sums)
		local output = test_utils.luarocks(" install invalid", test_utils.testing_env_variables)
		
	end)
	 it('luarocks install luasec with skipping dependency checks', function()
		test_environment.reset_environment(test_utils.testing_paths, test_utils.md5sums)
		test_utils.luarocks_noprint(" install luasec --nodeps; ", test_utils.testing_env_variables)
		assert.is.truthy(lfs.attributes(test_utils.testing_paths.testing_sys_tree .. "/lib/luarocks/rocks/luasec"))
		assert.is.falsy(lfs.attributes(test_utils.testing_paths.testing_sys_tree .. "/lib/luarocks/rocks/luasocket"))
	end)
end)